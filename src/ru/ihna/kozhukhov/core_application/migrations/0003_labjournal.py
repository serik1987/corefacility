# Generated by Django 4.2.5 on 2024-08-15 22:58

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('core_application', '0002_install'),
    ]

    operations = [
        migrations.CreateModel(
            name='LabjournalHashtag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(db_index=True, help_text='Text containing in the hashtag', max_length=64)),
                ('type', models.CharField(choices=[('R', 'Record hashtag'), ('F', 'File hashtag')], db_index=True, help_text='R for record hashtag, F for file hashtag', max_length=1)),
                ('project', models.ForeignKey(help_text='Project related to the hashtag', on_delete=django.db.models.deletion.CASCADE, to='core_application.project')),
            ],
            options={
                'unique_together': {('project_id', 'type', 'description')},
            },
        ),
        migrations.CreateModel(
            name='LabjournalRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.PositiveSmallIntegerField(db_index=True, help_text='Level of the root category is zero. Level of any other record is level of the category plus 1')),
                ('alias', models.SlugField(help_text='String ID for the record (not applicable for service records)', max_length=64, null=True)),
                ('datetime', models.DateTimeField(db_index=True, help_text='Date and time of the start of event')),
                ('type', models.CharField(choices=[('D', 'Data record'), ('S', 'Service record'), ('C', 'Category record')], db_index=True, help_text='The record type', max_length=1)),
                ('comments', models.TextField(help_text='Extra information', null=True)),
                ('name', models.CharField(db_index=True, help_text='Head of the service record (if applicable', max_length=256, null=True)),
                ('finish_time', models.DateTimeField(help_text='Date and time of the last event within the category (if applicable)', null=True)),
                ('base_directory', models.CharField(help_text='Base directory for the category', max_length=256, null=True)),
                ('custom_parameters', models.JSONField(default=dict)),
                ('parent_category', models.ForeignKey(help_text='Parent category', null=True, on_delete=django.db.models.deletion.RESTRICT, to='core_application.labjournalrecord')),
                ('project', models.ForeignKey(help_text='Related project', on_delete=django.db.models.deletion.CASCADE, to='core_application.project')),
            ],
        ),
        migrations.CreateModel(
            name='LabjournalRootRecord',
            fields=[
                ('project', models.OneToOneField(help_text='Related project', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='core_application.project')),
                ('comments', models.TextField(help_text='Extra information', null=True)),
                ('base_directory', models.CharField(help_text='Base directory for the category', max_length=256)),
            ],
        ),
        migrations.AlterField(
            model_name='posixrequest',
            name='initialization_date',
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.CreateModel(
            name='LabjournalCache',
            fields=[
                ('category', models.OneToOneField(help_text='Category which cache is stored here', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='core_application.labjournalrecord')),
                ('path', models.CharField(db_index=True, help_text='Path to the record', max_length=256, unique=True)),
                ('descriptors', models.JSONField(help_text='Descriptors related to a given directory as well as to all ascendent directories', null=True)),
                ('custom_parameters', models.JSONField(help_text='Default parameter values', null=True)),
                ('base_directory', models.CharField(help_text='Base directory for the containing record', max_length=256, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LabjournalParameterDescriptor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.SlugField(help_text='String identifier of the field (to be used in Matlab or Python)', max_length=256)),
                ('index', models.PositiveSmallIntegerField(help_text='Parameters with a higher index will be displaced below parameters with a lower index')),
                ('description', models.CharField(help_text='Short human-readable description of the field', max_length=256)),
                ('type', models.CharField(choices=[('B', 'Boolean field'), ('S', 'String'), ('N', 'Integer or float number'), ('D', 'Discrete')], help_text='Type for the parameter value', max_length=1)),
                ('required', models.BooleanField(help_text='Whether the parameter is required')),
                ('for_data_record', models.BooleanField(default=True, help_text='Applicable for the data records')),
                ('for_service_record', models.BooleanField(default=True, help_text='Applicable for the service records')),
                ('for_category_record', models.BooleanField(default=True, help_text='Applicable for the category records')),
                ('units', models.CharField(help_text='Units for the field', max_length=32, null=True)),
                ('category', models.ForeignKey(help_text='The parameter can be set only in given category or any of its descendant records.NULL for the root category', null=True, on_delete=django.db.models.deletion.CASCADE, to='core_application.labjournalrecord')),
                ('project', models.ForeignKey(help_text='The parameter identifier must be unique across the whole project. Also, when the parameter belong to the root category this field shows which one it belongs to', on_delete=django.db.models.deletion.CASCADE, to='core_application.project')),
            ],
            options={
                'ordering': ('index',),
                'unique_together': {('project_id', 'identifier'), ('category_id', 'index')},
            },
        ),
        migrations.CreateModel(
            name='LabjournalFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, help_text='Name of the file (relatively to the base directory of the corresponding category)', max_length=256)),
                ('record', models.ForeignKey(help_text='ID of the record the file relates to', on_delete=django.db.models.deletion.RESTRICT, to='core_application.labjournalrecord')),
            ],
            options={
                'unique_together': {('name', 'record_id')},
            },
        ),
        migrations.CreateModel(
            name='LabjournalSearchProperties',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('properties', models.JSONField(default=dict, help_text='Given search properties in JSON format')),
                ('category', models.ForeignKey(help_text='Category which search parameters are checked by the user', on_delete=django.db.models.deletion.CASCADE, to='core_application.labjournalrecord')),
                ('user', models.ForeignKey(help_text='User that adjusted given filter properties', on_delete=django.db.models.deletion.CASCADE, to='core_application.user')),
            ],
            options={
                'unique_together': {('category_id', 'user_id')},
            },
        ),
        migrations.CreateModel(
            name='LabjournalParameterView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_visible', models.BooleanField(help_text='True if the field must be visible; False otherwise')),
                ('index', models.PositiveSmallIntegerField(help_text='Consequtive index for the field')),
                ('descriptor', models.ForeignKey(help_text='Descriptor for that parameter', on_delete=django.db.models.deletion.CASCADE, to='core_application.labjournalparameterdescriptor')),
                ('record', models.ForeignKey(help_text='Record where the parameter must be shown or hidden', on_delete=django.db.models.deletion.CASCADE, to='core_application.labjournalrecord')),
                ('user', models.ForeignKey(help_text='User that must see this record', on_delete=django.db.models.deletion.CASCADE, to='core_application.user')),
            ],
            options={
                'unique_together': {('record_id', 'user_id', 'index'), ('record_id', 'user_id', 'descriptor_id')},
            },
        ),
        migrations.CreateModel(
            name='LabjournalParameterValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('string_value', models.CharField(db_index=True, help_text='String or discrete value (if applicable)', max_length=256, null=True)),
                ('float_value', models.FloatField(db_index=True, help_text='Float or boolean value (if applicable)', null=True)),
                ('descriptor', models.ForeignKey(help_text='descriptor that describes a given parameter', on_delete=django.db.models.deletion.RESTRICT, to='core_application.labjournalparameterdescriptor')),
                ('record', models.ForeignKey(help_text='Record this value relates to', on_delete=django.db.models.deletion.CASCADE, to='core_application.labjournalrecord')),
            ],
            options={
                'unique_together': {('descriptor_id', 'record_id')},
            },
        ),
        migrations.CreateModel(
            name='LabjournalParameterAvailableValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.SlugField(help_text='short string identifier of the value', max_length=256)),
                ('description', models.CharField(help_text='Human-readable value description', max_length=256)),
                ('descriptor', models.ForeignKey(help_text='Parameter which value is mentioned', on_delete=django.db.models.deletion.CASCADE, to='core_application.labjournalparameterdescriptor')),
            ],
            options={
                'unique_together': {('descriptor_id', 'alias')},
            },
        ),
        migrations.CreateModel(
            name='LabjournalHashtagRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hashtag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_application.labjournalhashtag')),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_application.labjournalrecord')),
            ],
            options={
                'unique_together': {('hashtag_id', 'record_id')},
            },
        ),
        migrations.CreateModel(
            name='LabjournalFileHashtag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_application.labjournalfile')),
                ('hashtag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_application.labjournalhashtag')),
            ],
            options={
                'unique_together': {('hashtag_id', 'file_id')},
            },
        ),
        migrations.CreateModel(
            name='LabjournalDescriptorHashtag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descriptor', models.ForeignKey(help_text='Descriptor that the hashtag is connected to', on_delete=django.db.models.deletion.CASCADE, to='core_application.labjournalparameterdescriptor')),
                ('hashtag', models.ForeignKey(help_text='Hashtag that must be connected to the descriptor', on_delete=django.db.models.deletion.CASCADE, to='core_application.labjournalhashtag')),
            ],
            options={
                'unique_together': {('hashtag_id', 'descriptor_id')},
            },
        ),
        migrations.CreateModel(
            name='LabjournalCheckedRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record', models.ForeignKey(help_text='ID of the record which check status is stored in a given row', on_delete=django.db.models.deletion.CASCADE, to='core_application.labjournalrecord')),
                ('user', models.ForeignKey(help_text='ID of the user that checked or unchecked the record', on_delete=django.db.models.deletion.CASCADE, to='core_application.user')),
            ],
            options={
                'unique_together': {('record_id', 'user_id')},
            },
        ),
    ]
